@using ContactsControl.Enums;
@model UserModel
@{
    ViewData["Title"] = "Editar Usuários";
}
<div class="text-center">
    <h1 class="display-4">Editar Usuário</h1>
</div>


<form class="px-5" asp-controller="User" asp-action="AlterUser" method="post">
        <div class="container px-5">
        <input type="hidden" asp-for="Id" />
        <div class="mb-3">
            <label for="Nome" class="form-label">Nome</label>@*asp-for já pega valor dos models, entao nao precisa do value no input*@
            <input type="text" class="form-control" asp-for="Nome" placeholder="Digite o nome do usuário" >
            @Html.ValidationMessageFor(msg => msg.Nome)
        </div>
        <div class="mb-3">
            <label for="Email" class="form-label">Email</label>
            <input type="email" class="form-control" asp-for="Email" placeholder="Digite o e-mail do usuário">
            @Html.ValidationMessageFor(msg => msg.Email)
        </div>
        <div class="mb-3">
            <label for="Celular" class="form-label">Login</label>
            <input type="text" class="form-control" asp-for="Login" placeholder="Digite o login do usuário">
            @Html.ValidationMessageFor(msg => msg.Login)
        </div>
        <div class="mb-3">
            <label for="Perfil" class="form-label">Perfil</label>
            <select class="form-control" asp-for="Perfil">
                @*asp-for => faz referencia a tabela nos models (banco de dados) *@
                <option value="">Selecione</option>
                <option value="@ProfileEnum.Admin">Administrador</option>
                <option value="@ProfileEnum.Padrao">Padrão</option>
            </select>
            @Html.ValidationMessageFor(msg => msg.Perfil)
        </div>

        <div class="d-flex flex-column">
            <button type="submit" class="btn btn-primary btn-block mb-2" >Atualizar</button>
            <a class="btn btn-secondary btn-block" asp-controller="User" asp-action="Index">Voltar</a>
        </div>
    </div>
</form>

